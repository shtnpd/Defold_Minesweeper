
local function swap(t, i, j)
	local tmp = t[i]
	t[i] = t[j]
	t[j] = tmp
	return t
end

local function scramble(t)
	for i=1, #t do
		t = swap(t, i, math.random(#t))
	end
	return t
end

local function circle_gen(t,i)
	local y = math.floor((i-1)/10)+1
	local x = math.fmod((i-1),10)+1
	print(x,y)
	if not t[i].tapped then
		tilemap.set_tile("game#tilemap","layer2",x,y,5)
	elseif t[i].red then
		tilemap.set_tile("game#tilemap","layer2",x,y,4)
	else
		tilemap.set_tile("game#tilemap","layer2",x,y,3)
	end
end	

local function draw(t)
	for i=1, 100 do
		circle_gen(t,i)
	end
end

local function restart(self)
	self.gamestart = false
	self.board = {}
	self.prefcolor = hash("grey")
	self.gameover = false
	self.points = 0
	label.set_text("game#point", "0")
	for i=1,50 do
		self.board[i] = {red = false, tapped = true}
	end
	for i=51,100 do
		self.board[i] = {red = true, tapped = true}
	end
	scramble(self.board)
	draw(self.board)
	label.set_text("go#start", "START")
	timer.delay(3, false, function ()
		for i=1,100 do
			self.board[i].tapped = false
			draw(self.board)
			self.gamestart = true
		end
		end)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	math.randomseed(socket.gettime())
	restart(self)
end

function on_input(self, action_id, action)
	if action.x>43 and action.x<215 and action.y>682 and action.y<731 and action.released then
		restart(self)
	else
		local x = math.floor(action.x/64)
		local y = math.floor(action.y/64)
		local index = y*10+x+1
		local cell = self.board[index]
		if action_id == hash("helpme") and not self.gameover and action.released and not cell.tapped and self.gamestart then
			print(action.x,action.y)
			cell.tapped = true
			circle_gen(self.board, index)
			if self.prefcolor == hash("grey") then
				self.prefcolor = hash(cell.red and "red" or "blue")
				self.points = self.points + 1
			elseif self.prefcolor == hash(cell.red and "red" or "blue") then
				self.points = self.points+1
			else
				self.gameover = true
				label.set_text("go#start", "RESTART")
			end
			if self.points == 50 then
				self.gameover = true
				label.set_text("go#start", "RESTART")
			end
			label.set_text("game#point", tostring(self.points))
		end
	end
end
